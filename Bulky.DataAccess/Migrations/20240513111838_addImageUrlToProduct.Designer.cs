// <auto-generated />
using Bulky.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bulky.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240513111838_addImageUrlToProduct")]
    partial class addImageUrlToProduct
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bulky.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "food"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "motorsports"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "art"
                        });
                });

            modelBuilder.Entity("Bulky.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TicketPrice")
                        .HasColumnType("float");

                    b.Property<string>("TicketTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 3,
                            Description = "a game relese Event .... .... .",
                            ISBN = "123123123",
                            ImageUrl = "",
                            Location = "Bengaluru, KA, IN",
                            Publisher = "Riot",
                            TicketPrice = 99.0,
                            TicketTitle = "Fortune of Time"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Description = "it's a drag race event  where modified, 2/4wheel builts and stock vehicles and showcase and much more.... .... .",
                            ISBN = "231231231",
                            ImageUrl = "",
                            Location = "Pune, MH, IN",
                            Publisher = "Elite Octane",
                            TicketPrice = 800.0,
                            TicketTitle = "The Valley Run"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Description = "it's a event for Gamer  and costume computer build where people  can show there skill in gaming and build unique computer.... .... .",
                            ISBN = "312312312",
                            ImageUrl = "",
                            Location = "Whitefield, KA, IN",
                            Publisher = "Intel",
                            TicketPrice = 0.0,
                            TicketTitle = "Intel Gamers day"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Description = "badminton tournament organised by Sai academy.... .... .",
                            ISBN = "142323423",
                            ImageUrl = "",
                            Location = "Mysore, KA, IN",
                            Publisher = "Sai academy",
                            TicketPrice = 199.0,
                            TicketTitle = "badminton heist"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            Description = "a game relese Event .... .... .",
                            ISBN = "132132132",
                            ImageUrl = "",
                            Location = "Bengaluru, KA, IN",
                            Publisher = "Riot",
                            TicketPrice = 29.0,
                            TicketTitle = "Fortune of Time"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Description = "it's a drag race event  where modified, 2/4wheel builts and stock vehicles and showcase and much more.... .... .",
                            ISBN = "213213213",
                            ImageUrl = "",
                            Location = "Pune, MH, IN",
                            Publisher = "Elite Octane",
                            TicketPrice = 800.0,
                            TicketTitle = "The Valley Run"
                        });
                });

            modelBuilder.Entity("Bulky.Models.Product", b =>
                {
                    b.HasOne("Bulky.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
